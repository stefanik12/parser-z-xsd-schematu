#summary Architecture and functionality description

Project, as inspired by JAXB, contains core classes Binder a Marshaler called from executable class Main.
=== Binder ===
Binder's input is XMl Schema. <br>
First, all the elements ('xsd:element') are extracted from it, then for every element is generated relevant java class. (containind empty variables (of specified type) for element content and every attribute.<br>
Binder's output are generated java classes and a collection describing Content tree defined by XML Schema.
=== Marshaler ===
Marshaler takes as input: 1) initialized Collection and 2) XML document valid for input XML Schema <br>
Marshaler for each element of Collection browses input XML for relevant element and initializes variables from it to relevant class. <br>
Initialization is realized by generated class Parser. 
Súčasťou inicializácie je, okrem naplnenia tried dátami z XML, aj hierarchické usporiadanie elementov (v parseri = premenných) podľa vstupnej XML Schemy, pomocou ID. Pre hierarchický model stromu sa používa trieda ParsedTree.java, pre reprezentáciu XML uzlov trieda Node.java ( obe v package 'source'). <br>
Výstupom Marshaler-u je vygenerovaná inicializovaná trieda Parser, pripravená na ďaľšie použitie. <br>
<br>
Obe triedy používajú metódy z triedy Binder (per analýzu XML Schemy), pre tieto metódy sú vytvorené aj JUnit testy. <br>
<br>
Kód sám neoveruje, či je vstupný XML dokument validný pre vstupnú XML Schemu, na čo slúžia iné nástroje. V prípade, že sa Schema nezhoduje so vstupným XML, Marshaler vyhodí na nešpecifikovanom mieste výnimku.